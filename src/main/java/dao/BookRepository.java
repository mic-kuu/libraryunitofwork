package dao;

import dao.mappers.ResultSetMapper;
import dao.uow.UnitOfWork;
import domain.Book;

import java.sql.Connection;
import java.sql.SQLException;

/**
 * Created by Michal on 08.01.2018.
 */
public class BookRepository extends RepositoryBase<Book> {
    private static final String TABLE_NAME = "books";

    public BookRepository(Connection connection, ResultSetMapper<Book> mapper, UnitOfWork uow) throws SQLException {
        super(connection, mapper, uow);
    }

    protected void setupUpdate(Book book) throws SQLException {
        update.setString(1, book.getAuthorFirstName());
        update.setString(2, book.getAuthorLastName());
        update.setString(3, book.getISBN());
        update.setString(4, book.getTitle());
        update.setInt(5, book.getId());
    }

    protected void setupInsert(Book book) throws SQLException {
        insert.setString(1, book.getAuthorFirstName());
        insert.setString(2, book.getAuthorLastName());
        insert.setString(3, book.getISBN());
        insert.setString(4, book.getTitle());
    }

    @Override
    protected String tableName() {
        return TABLE_NAME;
    }

    @Override
    protected String createTableSql() {
        return "CREATE TABLE " + tableName() + "(" +
                "id INT GENERATED BY DEFAULT AS IDENTITY, " +
                "author_first_name VARCHAR(50), " +
                "author_last_name VARCHAR(50), " +
                "ISBN VARCHAR(50), " +
                "title VARCHAR(50), " + ")" ;
    }

    @Override
    protected String updateSql() {
        return "UPDATE " + tableName() + " SET (author_first_name, author_last_name, ISBN, title) = (?, ?, ?, ?)" +
                " WHERE id = ?";
    }

    @Override
    protected String insertSql() {
        return "INSERT INTO " + tableName() + "(author_first_name, author_last_name, ISBN, title) VALUES(?, ?, ?, ?)";
    }
}
